{"ast":null,"code":"import moment from \"moment\";\nimport { Ascension } from \"./joursFeries\";\nexport function nthDay(dt, day, number) {\n  // Retourne le nième jour du mois par rapport à la date dt\n  // dt : date de référence\n  // day : jour de la semaine\n  // number : numero du jour = nieme\n  var firstDay = dt.clone().date(1).day(day); // Si firstDay est le mois précédent il faut décaler firstDay d'une semaine\n\n  if (firstDay.isBefore(dt.startOf(\"month\"))) firstDay.add(7, \"days\");\n  var result = firstDay.clone().add((number - 1) * 7, \"days\");\n  if (result.isAfter(dt.endOf(\"month\"))) result = moment.invalid();\n  return result;\n}\n\nfunction estToussaint(dt) {\n  // Le 1/11 est dans la 2e semaine de vacances de la Toussaint\n  var firstNov = moment([dt.year(), 10, 1]);\n  var finVacances = firstNov.day() === 0 ? firstNov : firstNov.day(7);\n  var debutVacances = finVacances.clone().add(-15, \"days\");\n  return debutVacances.diff(dt, \"days\") <= 0 && finVacances.diff(dt, \"days\") >= 0;\n}\n\nfunction debutVacancesNoel(annee) {\n  // Démarre le samedi qui précède Noël\n  // sauf si Noel est un dimanche auquel cas cela démarre le samedi 8 jours avant\n  var Noel = moment([annee, 11, 25]);\n  return Noel.clone().day(6 - (Noel.day() === 0 ? 2 : 1) * 7);\n}\n\nfunction finVacancesNoel(annee) {\n  var Noel = moment([annee, 11, 25]);\n  return debutVacancesNoel(annee).add(15 + (Noel.day() === 0 && 1), \"days\");\n}\n\nfunction estNoel(dt) {\n  // Attention le début et la fin des vacances sont sur deux années différentes\n  var debutVacances = debutVacancesNoel(dt.year());\n  var finVacances = finVacancesNoel(dt.year() - 1);\n  return debutVacances.diff(dt, \"days\") <= 0 || finVacances.diff(dt, \"days\") >= 0;\n}\n\nfunction debutVacancesFevrier(annee, zone) {\n  // Démarre 5 semaines après la fin des vacances de Noël pour la première zone\n  var Numero;\n\n  switch (zone) {\n    case \"A\":\n      Numero = (annee - 2018) % 3 + 1;\n      break;\n\n    case \"B\":\n      Numero = ((annee - 2018) % 3 + 2) % 3 + 1;\n      break;\n\n    case \"C\":\n      Numero = ((annee - 2018) % 3 + 1) % 3 + 1;\n      break;\n\n    default:\n      Numero = 0;\n  }\n\n  return finVacancesNoel(annee - 1).day((4 + Numero) * 7 - 1);\n}\n\nfunction finVacancesFevrier(annee, zone) {\n  return debutVacancesFevrier(annee, zone).add(15, \"days\");\n}\n\nfunction estFevrier(dt, zone) {\n  var debutVacances = debutVacancesFevrier(dt.year(), zone);\n  var finVacances = finVacancesFevrier(dt.year(), zone);\n  return debutVacances.diff(dt, \"days\") <= 0 && finVacances.diff(dt, \"days\") >= 0;\n}\n\nfunction debutVacancesPaques(annee, zone) {\n  //Démarre 8 semaines après le début des vacances de février avant 2022 et 9 semaines à partir de 2022\n  return debutVacancesFevrier(annee, zone).add(7 * 8 + (annee >= 2022 && 7), \"days\");\n}\n\nfunction finVacancesPaques(annee, zone) {\n  return debutVacancesPaques(annee, zone).add(15, \"days\");\n}\n\nfunction estPaques(dt, zone) {\n  var debutVacances = debutVacancesPaques(dt.year(), zone);\n  var finVacances = finVacancesPaques(dt.year(), zone);\n  return debutVacances.diff(dt, \"days\") <= 0 && finVacances.diff(dt, \"days\") >= 0;\n}\n\nfunction estAscencion(dt) {\n  var debutVacances = Ascension(dt.year());\n  var finVacances = Ascension(dt.year()).day(7);\n  return debutVacances.diff(dt, \"days\") <= 0 && finVacances.diff(dt, \"days\") >= 0;\n}\n\nfunction debutVacancesEte(annee) {\n  // Date approximative\n  // 1er jour avant le 8 juillet inclus qui est un samedi, un vendredi ou un mercredi\n  var debutVacances = moment([annee, 6, 8]);\n  var joursPossibles = [3, 5, 6];\n\n  do {\n    if (joursPossibles.includes(debutVacances.day())) break;\n    debutVacances.add(-1, \"days\");\n  } while (debutVacances.month() === 6);\n\n  return debutVacances;\n}\n\nfunction finVacancesEte(annee) {\n  // Date approximative\n  // La rentrée est le premier lundi, mardi ou jeudi de septembre\n  var finVacances = moment([annee, 8, 1]);\n  var joursPossibles = [1, 2, 4];\n\n  do {\n    if (joursPossibles.includes(finVacances.day())) break;\n    finVacances.add(1, \"days\");\n  } while (finVacances.month() === 8);\n\n  return finVacances.add(-1, \"days\");\n}\n\nfunction estEte(dt) {\n  var debutVacances = debutVacancesEte(dt.year());\n  var finVacances = finVacancesEte(dt.year());\n  return debutVacances.diff(dt, \"days\") <= 0 && finVacances.diff(dt, \"days\") >= 0;\n}\n\nexport function estVacances(dt, zone) {\n  return estToussaint(dt) || estNoel(dt) || estFevrier(dt, zone) || estPaques(dt, zone) || estAscencion(dt) || estEte(dt);\n}","map":{"version":3,"sources":["/Users/matthieuandre/Code/calendrier/calendrierFrancais/src/vacances.js"],"names":["moment","Ascension","nthDay","dt","day","number","firstDay","clone","date","isBefore","startOf","add","result","isAfter","endOf","invalid","estToussaint","firstNov","year","finVacances","debutVacances","diff","debutVacancesNoel","annee","Noel","finVacancesNoel","estNoel","debutVacancesFevrier","zone","Numero","finVacancesFevrier","estFevrier","debutVacancesPaques","finVacancesPaques","estPaques","estAscencion","debutVacancesEte","joursPossibles","includes","month","finVacancesEte","estEte","estVacances"],"mappings":"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","sourcesContent":["import moment from \"moment\";\r\nimport { Ascension } from \"./joursFeries\";\r\n\r\nexport function nthDay(dt, day, number) {\r\n  // Retourne le nième jour du mois par rapport à la date dt\r\n  // dt : date de référence\r\n  // day : jour de la semaine\r\n  // number : numero du jour = nieme\r\n  var firstDay = dt.clone().date(1).day(day);\r\n  // Si firstDay est le mois précédent il faut décaler firstDay d'une semaine\r\n  if (firstDay.isBefore(dt.startOf(\"month\"))) firstDay.add(7, \"days\");\r\n  var result = firstDay.clone().add((number - 1) * 7, \"days\");\r\n  if (result.isAfter(dt.endOf(\"month\"))) result = moment.invalid();\r\n  return result;\r\n}\r\n\r\nfunction estToussaint(dt) {\r\n  // Le 1/11 est dans la 2e semaine de vacances de la Toussaint\r\n  var firstNov = moment([dt.year(), 10, 1]);\r\n  var finVacances = firstNov.day() === 0 ? firstNov : firstNov.day(7);\r\n  var debutVacances = finVacances.clone().add(-15, \"days\");\r\n  return (\r\n    debutVacances.diff(dt, \"days\") <= 0 && finVacances.diff(dt, \"days\") >= 0\r\n  );\r\n}\r\n\r\nfunction debutVacancesNoel(annee) {\r\n  // Démarre le samedi qui précède Noël\r\n  // sauf si Noel est un dimanche auquel cas cela démarre le samedi 8 jours avant\r\n  var Noel = moment([annee, 11, 25]);\r\n  return Noel.clone().day(6 - (Noel.day() === 0 ? 2 : 1) * 7);\r\n}\r\n\r\nfunction finVacancesNoel(annee) {\r\n  var Noel = moment([annee, 11, 25]);\r\n  return debutVacancesNoel(annee).add(15 + (Noel.day() === 0 && 1), \"days\");\r\n}\r\n\r\nfunction estNoel(dt) {\r\n  // Attention le début et la fin des vacances sont sur deux années différentes\r\n  var debutVacances = debutVacancesNoel(dt.year());\r\n  var finVacances = finVacancesNoel(dt.year() - 1);\r\n  return (\r\n    debutVacances.diff(dt, \"days\") <= 0 || finVacances.diff(dt, \"days\") >= 0\r\n  );\r\n}\r\n\r\nfunction debutVacancesFevrier(annee, zone) {\r\n  // Démarre 5 semaines après la fin des vacances de Noël pour la première zone\r\n  var Numero;\r\n\r\n  switch (zone) {\r\n    case \"A\":\r\n      Numero = ((annee - 2018) % 3) + 1;\r\n      break;\r\n    case \"B\":\r\n      Numero = ((((annee - 2018) % 3) + 2) % 3) + 1;\r\n      break;\r\n    case \"C\":\r\n      Numero = ((((annee - 2018) % 3) + 1) % 3) + 1;\r\n      break;\r\n    default:\r\n      Numero = 0;\r\n  }\r\n\r\n  return finVacancesNoel(annee - 1).day((4 + Numero) * 7 - 1);\r\n}\r\n\r\nfunction finVacancesFevrier(annee, zone) {\r\n  return debutVacancesFevrier(annee, zone).add(15, \"days\");\r\n}\r\n\r\nfunction estFevrier(dt, zone) {\r\n  var debutVacances = debutVacancesFevrier(dt.year(), zone);\r\n  var finVacances = finVacancesFevrier(dt.year(), zone);\r\n  return (\r\n    debutVacances.diff(dt, \"days\") <= 0 && finVacances.diff(dt, \"days\") >= 0\r\n  );\r\n}\r\n\r\nfunction debutVacancesPaques(annee, zone) {\r\n  //Démarre 8 semaines après le début des vacances de février avant 2022 et 9 semaines à partir de 2022\r\n  return debutVacancesFevrier(annee, zone).add(\r\n    7 * 8 + (annee >= 2022 && 7),\r\n    \"days\"\r\n  );\r\n}\r\n\r\nfunction finVacancesPaques(annee, zone) {\r\n  return debutVacancesPaques(annee, zone).add(15, \"days\");\r\n}\r\n\r\nfunction estPaques(dt, zone) {\r\n  var debutVacances = debutVacancesPaques(dt.year(), zone);\r\n  var finVacances = finVacancesPaques(dt.year(), zone);\r\n  return (\r\n    debutVacances.diff(dt, \"days\") <= 0 && finVacances.diff(dt, \"days\") >= 0\r\n  );\r\n}\r\n\r\nfunction estAscencion(dt) {\r\n  var debutVacances = Ascension(dt.year());\r\n  var finVacances = Ascension(dt.year()).day(7);\r\n  return (\r\n    debutVacances.diff(dt, \"days\") <= 0 && finVacances.diff(dt, \"days\") >= 0\r\n  );\r\n}\r\n\r\nfunction debutVacancesEte(annee) {\r\n  // Date approximative\r\n  // 1er jour avant le 8 juillet inclus qui est un samedi, un vendredi ou un mercredi\r\n  var debutVacances = moment([annee, 6, 8]);\r\n  var joursPossibles = [3, 5, 6];\r\n  do {\r\n    if (joursPossibles.includes(debutVacances.day())) break;\r\n    debutVacances.add(-1, \"days\");\r\n  } while (debutVacances.month() === 6);\r\n  return debutVacances;\r\n}\r\n\r\nfunction finVacancesEte(annee) {\r\n  // Date approximative\r\n  // La rentrée est le premier lundi, mardi ou jeudi de septembre\r\n  var finVacances = moment([annee, 8, 1]);\r\n  var joursPossibles = [1, 2, 4];\r\n  do {\r\n    if (joursPossibles.includes(finVacances.day())) break;\r\n    finVacances.add(1, \"days\");\r\n  } while (finVacances.month() === 8);\r\n  return finVacances.add(-1, \"days\");\r\n}\r\n\r\nfunction estEte(dt) {\r\n  var debutVacances = debutVacancesEte(dt.year());\r\n  var finVacances = finVacancesEte(dt.year());\r\n  return (\r\n    debutVacances.diff(dt, \"days\") <= 0 && finVacances.diff(dt, \"days\") >= 0\r\n  );\r\n}\r\n\r\nexport function estVacances(dt, zone) {\r\n  return (\r\n    estToussaint(dt) ||\r\n    estNoel(dt) ||\r\n    estFevrier(dt, zone) ||\r\n    estPaques(dt, zone) ||\r\n    estAscencion(dt) ||\r\n    estEte(dt)\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}