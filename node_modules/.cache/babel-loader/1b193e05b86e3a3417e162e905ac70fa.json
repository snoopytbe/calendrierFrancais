{"ast":null,"code":"import React from 'react';\nimport { estFerie } from './joursFeries';\nimport { putApiData, deleteApiData } from './ApiData';\nimport Moment from \"moment\";\nimport { extendMoment } from \"moment-range\";\nconst moment = extendMoment(Moment);\n\nfunction uuidv4() {\n  return ([1e7] + -1e3 + -4e3 + -8e3 + -1e11).replace(/[018]/g, c => (c ^ crypto.getRandomValues(new Uint8Array(1))[0] & 15 >> c / 4).toString(16));\n}\n\nfunction estWE(jour) {\n  return jour.day() === 6 || jour.day() === 0;\n}\n\nexport function calculeCapitalConges(anneeDebutPeriodeConges, abr) {\n  var result;\n  if (abr === 'CA') result = 27;else {\n    var periodeConges = moment.range(moment([anneeDebutPeriodeConges, 4, 1]), moment([anneeDebutPeriodeConges + 1, 3, 30]));\n    var nbJourOuvrables = 0;\n    Array.from(periodeConges.by('day')).forEach(oneDay => {\n      if (!estFerie(oneDay) && !estWE(oneDay)) nbJourOuvrables += 1;\n    });\n    result = nbJourOuvrables - 27 - 209;\n  }\n  return result;\n}\nexport function calculeSoldeCongesAtDate(date, abr, conges) {\n  return 0;\n  var anneeDebutPeriodeConges = date.month() <= 3 ? date.year() - 1 : date.year();\n  var result = calculeCapitalConges(anneeDebutPeriodeConges, abr);\n  result -= compteCongesPeriode(abr, conges, moment([anneeDebutPeriodeConges, 4, 1]), date);\n  return result;\n}\nexport function compteCongesPeriode(abr, conges, dateDebut, dateFin) {\n  var result = 0;\n  conges.forEach(oneConge => {\n    if (moment(oneConge.date, 'yyyy-MM-DD').isSameOrAfter(dateDebut) && moment(oneConge.date, 'yyyy-MM-DD').isSameOrBefore(dateFin) && oneConge.abr === abr) {\n      result += 1;\n    }\n  });\n  return result;\n}\nexport function compteCongesAnnee(conges, anneeDebut) {\n  var dateDebut = moment([anneeDebut, 4, 1]);\n  var dateFin = moment([anneeDebut + 1, 3, 30]);\n  var result = {\n    CA: '',\n    RTT: '',\n    FOR: '',\n    MAL: ''\n  };\n  Object.keys(result).forEach(key => result[key] = compteCongesPeriode(key, conges, dateDebut, dateFin));\n  return result;\n}\nexport function handleNewConge(abreviation, type, conges, highlighted) {\n  let newConges = []; // on va ajouter/modifier avec le PUT tous les jours \"highlighted\"\n  //console.log(abreviation);\n\n  Array.from(highlighted.by('day')).forEach(oneHighlighted => {\n    // On ne sauvegarde les conges que pour les jours qui ne sont ni fériés, ni dimanche, ni samedi\n    let day = oneHighlighted.day();\n\n    if (!estFerie(oneHighlighted) && !(day === 0) && !(day === 6)) {\n      var _conges$filter$0$id, _conges$filter, _conges$filter$, _conges$filter$0$dure, _conges$filter2, _conges$filter2$, _conges$filter3, _conges$filter3$;\n\n      // On commence par chercher l'id et on le créé s'il n'existe pas\n      let id = (_conges$filter$0$id = (_conges$filter = conges.filter(oneConge => moment(oneConge.date).isSame(oneHighlighted, 'day'))) === null || _conges$filter === void 0 ? void 0 : (_conges$filter$ = _conges$filter[0]) === null || _conges$filter$ === void 0 ? void 0 : _conges$filter$.id) !== null && _conges$filter$0$id !== void 0 ? _conges$filter$0$id : uuidv4();\n      let duree = type === 'temps' ? abreviation : (_conges$filter$0$dure = (_conges$filter2 = conges.filter(oneConge => moment(oneConge.date).isSame(oneHighlighted, 'day'))) === null || _conges$filter2 === void 0 ? void 0 : (_conges$filter2$ = _conges$filter2[0]) === null || _conges$filter2$ === void 0 ? void 0 : _conges$filter2$.duree) !== null && _conges$filter$0$dure !== void 0 ? _conges$filter$0$dure : 'J';\n      let abr = type === 'temps' ? (_conges$filter3 = conges.filter(oneConge => moment(oneConge.date).isSame(oneHighlighted, 'day'))) === null || _conges$filter3 === void 0 ? void 0 : (_conges$filter3$ = _conges$filter3[0]) === null || _conges$filter3$ === void 0 ? void 0 : _conges$filter3$.abr : abreviation;\n      let data = {\n        date: oneHighlighted.format('yyyy-MM-DD'),\n        abr: abr,\n        id: id,\n        duree: duree\n      }; //console.log(data)\n\n      if (!abr) {\n        deleteApiData([data]);\n      } else {\n        putApiData([data]);\n        newConges = [...newConges, data];\n      }\n    }\n  }); //on complète avec les jours présents dans \"conges\" qui n'étaient pas highlighted\n\n  conges === null || conges === void 0 ? void 0 : conges.forEach(oneConge => {\n    if (!(highlighted !== null && highlighted !== void 0 && highlighted.contains(moment(oneConge.date)))) newConges = [...newConges, oneConge];\n  }); //console.log(conges)\n\n  return newConges;\n}","map":{"version":3,"sources":["/Users/matthieuandre/Code/calendrier/calendrierFrancais/src/conges.js"],"names":["React","estFerie","putApiData","deleteApiData","Moment","extendMoment","moment","uuidv4","replace","c","crypto","getRandomValues","Uint8Array","toString","estWE","jour","day","calculeCapitalConges","anneeDebutPeriodeConges","abr","result","periodeConges","range","nbJourOuvrables","Array","from","by","forEach","oneDay","calculeSoldeCongesAtDate","date","conges","month","year","compteCongesPeriode","dateDebut","dateFin","oneConge","isSameOrAfter","isSameOrBefore","compteCongesAnnee","anneeDebut","CA","RTT","FOR","MAL","Object","keys","key","handleNewConge","abreviation","type","highlighted","newConges","oneHighlighted","id","filter","isSame","duree","data","format","contains"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { estFerie } from './joursFeries';\nimport { putApiData, deleteApiData } from './ApiData';\nimport Moment from \"moment\";\nimport { extendMoment } from \"moment-range\";\n\nconst moment = extendMoment(Moment);\n\nfunction uuidv4() {\n  return ([1e7] + -1e3 + -4e3 + -8e3 + -1e11).replace(/[018]/g, (c) =>\n    (\n      c ^\n      (crypto.getRandomValues(new Uint8Array(1))[0] & (15 >> (c / 4)))\n    ).toString(16)\n  );\n}\n\nfunction estWE(jour) {\n  return jour.day() === 6 || jour.day() === 0;\n}\n\nexport function calculeCapitalConges(anneeDebutPeriodeConges, abr) {\n  var result;\n  if (abr === 'CA') result = 27;\n  else {\n    var periodeConges = moment.range(\n      moment([anneeDebutPeriodeConges, 4, 1]),\n      moment([anneeDebutPeriodeConges + 1, 3, 30])\n    );\n    var nbJourOuvrables = 0;\n    Array.from(periodeConges.by('day')).forEach((oneDay) => {\n      if (!estFerie(oneDay) && !estWE(oneDay)) nbJourOuvrables += 1;\n    });\n    result = nbJourOuvrables - 27 - 209;\n  }\n  return result;\n}\n\nexport function calculeSoldeCongesAtDate(date, abr, conges) {\n  return 0\n\n  var anneeDebutPeriodeConges =\n    date.month() <= 3 ? date.year() - 1 : date.year();\n  var result = calculeCapitalConges(anneeDebutPeriodeConges, abr);\n  result -= compteCongesPeriode(\n    abr,\n    conges,\n    moment([anneeDebutPeriodeConges, 4, 1]),\n    date\n  );\n  return result;\n}\n\nexport function compteCongesPeriode(abr, conges, dateDebut, dateFin) {\n  var result = 0;\n\n  conges.forEach((oneConge) => {\n    if (\n      moment(oneConge.date, 'yyyy-MM-DD').isSameOrAfter(dateDebut) &&\n      moment(oneConge.date, 'yyyy-MM-DD').isSameOrBefore(dateFin) &&\n      oneConge.abr === abr\n    ) {\n      result += 1;\n    }\n  });\n  return result;\n}\n\nexport function compteCongesAnnee(conges, anneeDebut) {\n  var dateDebut = moment([anneeDebut, 4, 1]);\n  var dateFin = moment([anneeDebut + 1, 3, 30]);\n\n  var result = { CA: '', RTT: '', FOR: '', MAL: '' };\n  Object.keys(result).forEach(\n    (key) =>\n      (result[key] = compteCongesPeriode(key, conges, dateDebut, dateFin))\n  );\n\n  return result;\n}\n\nexport function handleNewConge(abreviation, type, conges, highlighted) {\n  let newConges = [];\n  // on va ajouter/modifier avec le PUT tous les jours \"highlighted\"\n  //console.log(abreviation);\n  Array.from(highlighted.by('day')).forEach((oneHighlighted) => {\n    // On ne sauvegarde les conges que pour les jours qui ne sont ni fériés, ni dimanche, ni samedi\n    let day = oneHighlighted.day();\n\n    if (!estFerie(oneHighlighted) && !(day === 0) && !(day === 6)) {\n      // On commence par chercher l'id et on le créé s'il n'existe pas\n      let id =\n        conges.filter((oneConge) =>\n          moment(oneConge.date).isSame(oneHighlighted, 'day')\n        )?.[0]?.id ?? uuidv4();\n\n      let duree =\n        type === 'temps'\n          ? abreviation\n          : conges.filter((oneConge) =>\n              moment(oneConge.date).isSame(oneHighlighted, 'day')\n            )?.[0]?.duree ?? 'J';\n\n      let abr =\n        type === 'temps'\n          ? conges.filter((oneConge) =>\n              moment(oneConge.date).isSame(oneHighlighted, 'day')\n            )?.[0]?.abr\n          : abreviation;\n\n      let data = {\n        date: oneHighlighted.format('yyyy-MM-DD'),\n        abr: abr,\n        id: id,\n        duree: duree,\n      };\n\n      //console.log(data)\n      if (!abr) {\n        deleteApiData([data]);\n      } else {\n        putApiData([data]);\n        newConges = [...newConges, data];\n      }\n    }\n  });\n\n  //on complète avec les jours présents dans \"conges\" qui n'étaient pas highlighted\n  conges?.forEach((oneConge) => {\n    if (!highlighted?.contains(moment(oneConge.date)))\n      newConges = [...newConges, oneConge];\n  });\n\n  //console.log(conges)\n  return newConges;\n}\n"]},"metadata":{},"sourceType":"module"}